### 2024-10-20  20:22
---------------------

### It was finaly created a bucket and the files was uploaded.
### After that the VPC was created.

vagrant@tfbuntu:~/GCP7-pet-lab/tfinfra$ terraform apply -auto-approve -input=false

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # google_compute_firewall.allow_mysql_from_petclinic will be created
  + resource "google_compute_firewall" "allow_mysql_from_petclinic" {
      + creation_timestamp = (known after apply)
      + destination_ranges = (known after apply)
      + direction          = (known after apply)
      + enable_logging     = (known after apply)
      + id                 = (known after apply)
      + name               = "allow-mysql-from-petclinic"
      + network            = (known after apply)
      + priority           = 1000
      + project            = "az-537298"
      + self_link          = (known after apply)
      + source_ranges      = [
          + "10.0.1.0/24",
        ]
      + target_tags        = [
          + "mysqlserver-firewall",
        ]

      + allow {
          + ports    = [
              + "3306",
            ]
          + protocol = "tcp"
        }
    }

  # google_compute_firewall.allow_petclinic_from_internet will be created
  + resource "google_compute_firewall" "allow_petclinic_from_internet" {
      + creation_timestamp = (known after apply)
      + destination_ranges = (known after apply)
      + direction          = (known after apply)
      + enable_logging     = (known after apply)
      + id                 = (known after apply)
      + name               = "allow-petclinic-from-internet"
      + network            = (known after apply)
      + priority           = 1000
      + project            = "az-537298"
      + self_link          = (known after apply)
      + source_ranges      = [
          + "0.0.0.0/0",
        ]
      + target_tags        = [
          + "petclinic-firewall",
        ]

      + allow {
          + ports    = [
              + "8080",
            ]
          + protocol = "tcp"
        }
    }

  # google_compute_firewall.allow_ssh_from_internet will be created
  + resource "google_compute_firewall" "allow_ssh_from_internet" {
      + creation_timestamp = (known after apply)
      + destination_ranges = (known after apply)
      + direction          = (known after apply)
      + enable_logging     = (known after apply)
      + id                 = (known after apply)
      + name               = "allow-ssh-from-internet"
      + network            = (known after apply)
      + priority           = 1000
      + project            = "az-537298"
      + self_link          = (known after apply)
      + source_ranges      = [
          + "0.0.0.0/0",
        ]
      + target_tags        = [
          + "mysqlserver-firewall",
          + "petclinic-firewall",
        ]

      + allow {
          + ports    = [
              + "22",
            ]
          + protocol = "tcp"
        }
      + allow {
          + ports    = []
          + protocol = "icmp"
        }
    }

  # google_compute_network.vpc will be created
  + resource "google_compute_network" "vpc" {
      + auto_create_subnetworks                   = false
      + delete_default_routes_on_create           = false
      + gateway_ipv4                              = (known after apply)
      + id                                        = (known after apply)
      + internal_ipv6_range                       = (known after apply)
      + mtu                                       = (known after apply)
      + name                                      = "petclinic-vpc"
      + network_firewall_policy_enforcement_order = "AFTER_CLASSIC_FIREWALL"
      + numeric_id                                = (known after apply)
      + project                                   = "az-537298"
      + routing_mode                              = (known after apply)
      + self_link                                 = (known after apply)
    }

  # google_compute_subnetwork.pc_subnet will be created
  + resource "google_compute_subnetwork" "pc_subnet" {
      + creation_timestamp         = (known after apply)
      + external_ipv6_prefix       = (known after apply)
      + fingerprint                = (known after apply)
      + gateway_address            = (known after apply)
      + id                         = (known after apply)
      + internal_ipv6_prefix       = (known after apply)
      + ip_cidr_range              = "10.0.1.0/24"
      + ipv6_cidr_range            = (known after apply)
      + name                       = "pc-subnet"
      + network                    = (known after apply)
      + private_ip_google_access   = (known after apply)
      + private_ipv6_google_access = (known after apply)
      + project                    = "az-537298"
      + purpose                    = (known after apply)
      + region                     = "us-central1"
      + self_link                  = (known after apply)
      + stack_type                 = (known after apply)

      + secondary_ip_range (known after apply)
    }

  # google_compute_subnetwork.sql_subnet will be created
  + resource "google_compute_subnetwork" "sql_subnet" {
      + creation_timestamp         = (known after apply)
      + external_ipv6_prefix       = (known after apply)
      + fingerprint                = (known after apply)
      + gateway_address            = (known after apply)
      + id                         = (known after apply)
      + internal_ipv6_prefix       = (known after apply)
      + ip_cidr_range              = "10.0.2.0/24"
      + ipv6_cidr_range            = (known after apply)
      + name                       = "mysql-subnet"
      + network                    = (known after apply)
      + private_ip_google_access   = (known after apply)
      + private_ipv6_google_access = (known after apply)
      + project                    = "az-537298"
      + purpose                    = (known after apply)
      + region                     = "us-central1"
      + self_link                  = (known after apply)
      + stack_type                 = (known after apply)

      + secondary_ip_range (known after apply)
    }

  # google_storage_bucket.bucket will be created
  + resource "google_storage_bucket" "bucket" {
      + effective_labels            = {
          + "goog-terraform-provisioned" = "true"
        }
      + force_destroy               = false
      + id                          = (known after apply)
      + location                    = "US-CENTRAL1"
      + name                        = "az-537298-bucket"
      + project                     = (known after apply)
      + project_number              = (known after apply)
      + public_access_prevention    = (known after apply)
      + rpo                         = (known after apply)
      + self_link                   = (known after apply)
      + storage_class               = "STANDARD"
      + terraform_labels            = {
          + "goog-terraform-provisioned" = "true"
        }
      + uniform_bucket_level_access = (known after apply)
      + url                         = (known after apply)

      + soft_delete_policy (known after apply)

      + versioning (known after apply)

      + website (known after apply)
    }

  # google_storage_bucket_object.files[".env/env_local"] will be created
  + resource "google_storage_bucket_object" "files" {
      + bucket         = "az-537298-bucket"
      + content        = (sensitive value)
      + content_type   = (known after apply)
      + crc32c         = (known after apply)
      + detect_md5hash = "different hash"
      + generation     = (known after apply)
      + id             = (known after apply)
      + kms_key_name   = (known after apply)
      + md5hash        = (known after apply)
      + media_link     = (known after apply)
      + name           = ".env/env_local"
      + output_name    = (known after apply)
      + self_link      = (known after apply)
      + source         = "../.env/env_local"
      + storage_class  = (known after apply)
    }

  # google_storage_bucket_object.files[".env/mysqlserver.env"] will be created
  + resource "google_storage_bucket_object" "files" {
      + bucket         = "az-537298-bucket"
      + content        = (sensitive value)
      + content_type   = (known after apply)
      + crc32c         = (known after apply)
      + detect_md5hash = "different hash"
      + generation     = (known after apply)
      + id             = (known after apply)
      + kms_key_name   = (known after apply)
      + md5hash        = (known after apply)
      + media_link     = (known after apply)
      + name           = ".env/mysqlserver.env"
      + output_name    = (known after apply)
      + self_link      = (known after apply)
      + source         = "../.env/mysqlserver.env"
      + storage_class  = (known after apply)
    }

  # google_storage_bucket_object.files[".env/petclinic.env"] will be created
  + resource "google_storage_bucket_object" "files" {
      + bucket         = "az-537298-bucket"
      + content        = (sensitive value)
      + content_type   = (known after apply)
      + crc32c         = (known after apply)
      + detect_md5hash = "different hash"
      + generation     = (known after apply)
      + id             = (known after apply)
      + kms_key_name   = (known after apply)
      + md5hash        = (known after apply)
      + media_link     = (known after apply)
      + name           = ".env/petclinic.env"
      + output_name    = (known after apply)
      + self_link      = (known after apply)
      + source         = "../.env/petclinic.env"
      + storage_class  = (known after apply)
    }

  # google_storage_bucket_object.files["app/__cacert_entrypoint.sh"] will be created
  + resource "google_storage_bucket_object" "files" {
      + bucket         = "az-537298-bucket"
      + content        = (sensitive value)
      + content_type   = (known after apply)
      + crc32c         = (known after apply)
      + detect_md5hash = "different hash"
      + generation     = (known after apply)
      + id             = (known after apply)
      + kms_key_name   = (known after apply)
      + md5hash        = (known after apply)
      + media_link     = (known after apply)
      + name           = "app/__cacert_entrypoint.sh"
      + output_name    = (known after apply)
      + self_link      = (known after apply)
      + source         = "../app/__cacert_entrypoint.sh"
      + storage_class  = (known after apply)
    }

  # google_storage_bucket_object.files["app/petclinic.service"] will be created
  + resource "google_storage_bucket_object" "files" {
      + bucket         = "az-537298-bucket"
      + content        = (sensitive value)
      + content_type   = (known after apply)
      + crc32c         = (known after apply)
      + detect_md5hash = "different hash"
      + generation     = (known after apply)
      + id             = (known after apply)
      + kms_key_name   = (known after apply)
      + md5hash        = (known after apply)
      + media_link     = (known after apply)
      + name           = "app/petclinic.service"
      + output_name    = (known after apply)
      + self_link      = (known after apply)
      + source         = "../app/petclinic.service"
      + storage_class  = (known after apply)
    }

  # google_storage_bucket_object.files["app/spring-petclinic.jar"] will be created
  + resource "google_storage_bucket_object" "files" {
      + bucket         = "az-537298-bucket"
      + content        = (sensitive value)
      + content_type   = (known after apply)
      + crc32c         = (known after apply)
      + detect_md5hash = "different hash"
      + generation     = (known after apply)
      + id             = (known after apply)
      + kms_key_name   = (known after apply)
      + md5hash        = (known after apply)
      + media_link     = (known after apply)
      + name           = "app/spring-petclinic.jar"
      + output_name    = (known after apply)
      + self_link      = (known after apply)
      + source         = "../app/spring-petclinic.jar"
      + storage_class  = (known after apply)
    }

  # google_storage_bucket_object.files["app/start_app.sh"] will be created
  + resource "google_storage_bucket_object" "files" {
      + bucket         = "az-537298-bucket"
      + content        = (sensitive value)
      + content_type   = (known after apply)
      + crc32c         = (known after apply)
      + detect_md5hash = "different hash"
      + generation     = (known after apply)
      + id             = (known after apply)
      + kms_key_name   = (known after apply)
      + md5hash        = (known after apply)
      + media_link     = (known after apply)
      + name           = "app/start_app.sh"
      + output_name    = (known after apply)
      + self_link      = (known after apply)
      + source         = "../app/start_app.sh"
      + storage_class  = (known after apply)
    }

Plan: 14 to add, 0 to change, 0 to destroy.
google_compute_network.vpc: Creating...
google_storage_bucket.bucket: Creating...
google_storage_bucket.bucket: Creation complete after 2s [id=az-537298-bucket]
google_storage_bucket_object.files["app/petclinic.service"]: Creating...
google_storage_bucket_object.files[".env/env_local"]: Creating...
google_storage_bucket_object.files["app/__cacert_entrypoint.sh"]: Creating...
google_storage_bucket_object.files["app/start_app.sh"]: Creating...
google_storage_bucket_object.files[".env/mysqlserver.env"]: Creating...
google_storage_bucket_object.files[".env/petclinic.env"]: Creating...
google_storage_bucket_object.files["app/spring-petclinic.jar"]: Creating...
google_storage_bucket_object.files["app/petclinic.service"]: Creation complete after 1s [id=az-537298-bucket-app/petclinic.service]
google_storage_bucket_object.files["app/start_app.sh"]: Creation complete after 2s [id=az-537298-bucket-app/start_app.sh]
google_storage_bucket_object.files["app/__cacert_entrypoint.sh"]: Creation complete after 2s [id=az-537298-bucket-app/__cacert_entrypoint.sh]
google_storage_bucket_object.files[".env/petclinic.env"]: Creation complete after 2s [id=az-537298-bucket-.env/petclinic.env]
google_storage_bucket_object.files[".env/env_local"]: Creation complete after 2s [id=az-537298-bucket-.env/env_local]
google_storage_bucket_object.files[".env/mysqlserver.env"]: Creation complete after 2s [id=az-537298-bucket-.env/mysqlserver.env]
google_compute_network.vpc: Still creating... [10s elapsed]
google_storage_bucket_object.files["app/spring-petclinic.jar"]: Still creating... [10s elapsed]
google_storage_bucket_object.files["app/spring-petclinic.jar"]: Creation complete after 12s [id=az-537298-bucket-app/spring-petclinic.jar]
google_compute_network.vpc: Still creating... [20s elapsed]
google_compute_network.vpc: Creation complete after 23s [id=projects/az-537298/global/networks/petclinic-vpc]
google_compute_firewall.allow_petclinic_from_internet: Creating...
google_compute_firewall.allow_mysql_from_petclinic: Creating...
google_compute_subnetwork.sql_subnet: Creating...
google_compute_firewall.allow_ssh_from_internet: Creating...
google_compute_subnetwork.pc_subnet: Creating...
google_compute_firewall.allow_petclinic_from_internet: Still creating... [10s elapsed]
google_compute_firewall.allow_mysql_from_petclinic: Still creating... [10s elapsed]
google_compute_subnetwork.sql_subnet: Still creating... [10s elapsed]
google_compute_firewall.allow_ssh_from_internet: Still creating... [10s elapsed]
google_compute_subnetwork.pc_subnet: Still creating... [10s elapsed]
google_compute_firewall.allow_ssh_from_internet: Creation complete after 11s [id=projects/az-537298/global/firewalls/allow-ssh-from-internet]
google_compute_firewall.allow_mysql_from_petclinic: Creation complete after 11s [id=projects/az-537298/global/firewalls/allow-mysql-from-petclinic]
google_compute_firewall.allow_petclinic_from_internet: Creation complete after 12s [id=projects/az-537298/global/firewalls/allow-petclinic-from-internet]
google_compute_subnetwork.sql_subnet: Still creating... [20s elapsed]
google_compute_subnetwork.pc_subnet: Still creating... [20s elapsed]
google_compute_subnetwork.sql_subnet: Creation complete after 24s [id=projects/az-537298/regions/us-central1/subnetworks/mysql-subnet]
google_compute_subnetwork.pc_subnet: Creation complete after 24s [id=projects/az-537298/regions/us-central1/subnetworks/pc-subnet]

Apply complete! Resources: 14 added, 0 changed, 0 destroyed.
vagrant@tfbuntu:~/GCP7-pet-lab/tfinfra$ terraform show


# google_compute_firewall.allow_mysql_from_petclinic:
resource "google_compute_firewall" "allow_mysql_from_petclinic" {
    creation_timestamp = "2024-10-20T10:17:01.158-07:00"
    description        = [90mnull[0m[0m
    destination_ranges = []
    direction          = "INGRESS"
    disabled           = false
    id                 = "projects/az-537298/global/firewalls/allow-mysql-from-petclinic"
    name               = "allow-mysql-from-petclinic"
    network            = "https://www.googleapis.com/compute/v1/projects/az-537298/global/networks/petclinic-vpc"
    priority           = 1000
    project            = "az-537298"
    self_link          = "https://www.googleapis.com/compute/v1/projects/az-537298/global/firewalls/allow-mysql-from-petclinic"
    source_ranges      = [
        "10.0.1.0/24",
    ]
    target_tags        = [
        "mysqlserver-firewall",
    ]

    allow {
        ports    = [
            "3306",
        ]
        protocol = "tcp"
    }
}

# google_compute_firewall.allow_petclinic_from_internet:
resource "google_compute_firewall" "allow_petclinic_from_internet" {
    creation_timestamp = "2024-10-20T10:17:01.147-07:00"
    description        = [90mnull[0m[0m
    destination_ranges = []
    direction          = "INGRESS"
    disabled           = false
    id                 = "projects/az-537298/global/firewalls/allow-petclinic-from-internet"
    name               = "allow-petclinic-from-internet"
    network            = "https://www.googleapis.com/compute/v1/projects/az-537298/global/networks/petclinic-vpc"
    priority           = 1000
    project            = "az-537298"
    self_link          = "https://www.googleapis.com/compute/v1/projects/az-537298/global/firewalls/allow-petclinic-from-internet"
    source_ranges      = [
        "0.0.0.0/0",
    ]
    target_tags        = [
        "petclinic-firewall",
    ]

    allow {
        ports    = [
            "8080",
        ]
        protocol = "tcp"
    }
}

# google_compute_firewall.allow_ssh_from_internet:
resource "google_compute_firewall" "allow_ssh_from_internet" {
    creation_timestamp = "2024-10-20T10:17:01.115-07:00"
    description        = [90mnull[0m[0m
    destination_ranges = []
    direction          = "INGRESS"
    disabled           = false
    id                 = "projects/az-537298/global/firewalls/allow-ssh-from-internet"
    name               = "allow-ssh-from-internet"
    network            = "https://www.googleapis.com/compute/v1/projects/az-537298/global/networks/petclinic-vpc"
    priority           = 1000
    project            = "az-537298"
    self_link          = "https://www.googleapis.com/compute/v1/projects/az-537298/global/firewalls/allow-ssh-from-internet"
    source_ranges      = [
        "0.0.0.0/0",
    ]
    target_tags        = [
        "mysqlserver-firewall",
        "petclinic-firewall",
    ]

    allow {
        ports    = [
            "22",
        ]
        protocol = "tcp"
    }
    allow {
        ports    = []
        protocol = "icmp"
    }
}

# google_compute_network.vpc:
resource "google_compute_network" "vpc" {
    auto_create_subnetworks                   = false
    delete_default_routes_on_create           = false
    description                               = [90mnull[0m[0m
    enable_ula_internal_ipv6                  = false
    gateway_ipv4                              = [90mnull[0m[0m
    id                                        = "projects/az-537298/global/networks/petclinic-vpc"
    internal_ipv6_range                       = [90mnull[0m[0m
    mtu                                       = 0
    name                                      = "petclinic-vpc"
    network_firewall_policy_enforcement_order = "AFTER_CLASSIC_FIREWALL"
    numeric_id                                = "6284292190939677721"
    project                                   = "az-537298"
    routing_mode                              = "REGIONAL"
    self_link                                 = "https://www.googleapis.com/compute/v1/projects/az-537298/global/networks/petclinic-vpc"
}

# google_compute_subnetwork.pc_subnet:
resource "google_compute_subnetwork" "pc_subnet" {
    creation_timestamp         = "2024-10-20T10:17:01.668-07:00"
    description                = [90mnull[0m[0m
    external_ipv6_prefix       = [90mnull[0m[0m
    gateway_address            = "10.0.1.1"
    id                         = "projects/az-537298/regions/us-central1/subnetworks/pc-subnet"
    internal_ipv6_prefix       = [90mnull[0m[0m
    ip_cidr_range              = "10.0.1.0/24"
    ipv6_access_type           = [90mnull[0m[0m
    ipv6_cidr_range            = [90mnull[0m[0m
    name                       = "pc-subnet"
    network                    = "https://www.googleapis.com/compute/v1/projects/az-537298/global/networks/petclinic-vpc"
    private_ip_google_access   = false
    private_ipv6_google_access = "DISABLE_GOOGLE_ACCESS"
    project                    = "az-537298"
    purpose                    = "PRIVATE"
    region                     = "us-central1"
    reserved_internal_range    = [90mnull[0m[0m
    role                       = [90mnull[0m[0m
    self_link                  = "https://www.googleapis.com/compute/v1/projects/az-537298/regions/us-central1/subnetworks/pc-subnet"
    stack_type                 = "IPV4_ONLY"
}

# google_compute_subnetwork.sql_subnet:
resource "google_compute_subnetwork" "sql_subnet" {
    creation_timestamp         = "2024-10-20T10:17:02.720-07:00"
    description                = [90mnull[0m[0m
    external_ipv6_prefix       = [90mnull[0m[0m
    gateway_address            = "10.0.2.1"
    id                         = "projects/az-537298/regions/us-central1/subnetworks/mysql-subnet"
    internal_ipv6_prefix       = [90mnull[0m[0m
    ip_cidr_range              = "10.0.2.0/24"
    ipv6_access_type           = [90mnull[0m[0m
    ipv6_cidr_range            = [90mnull[0m[0m
    name                       = "mysql-subnet"
    network                    = "https://www.googleapis.com/compute/v1/projects/az-537298/global/networks/petclinic-vpc"
    private_ip_google_access   = false
    private_ipv6_google_access = "DISABLE_GOOGLE_ACCESS"
    project                    = "az-537298"
    purpose                    = "PRIVATE"
    region                     = "us-central1"
    reserved_internal_range    = [90mnull[0m[0m
    role                       = [90mnull[0m[0m
    self_link                  = "https://www.googleapis.com/compute/v1/projects/az-537298/regions/us-central1/subnetworks/mysql-subnet"
    stack_type                 = "IPV4_ONLY"
}

# google_storage_bucket.bucket:
resource "google_storage_bucket" "bucket" {
    default_event_based_hold    = false
    effective_labels            = {
        "goog-terraform-provisioned" = "true"
    }
    enable_object_retention     = false
    force_destroy               = false
    id                          = "az-537298-bucket"
    location                    = "US-CENTRAL1"
    name                        = "az-537298-bucket"
    project                     = "az-537298"
    project_number              = 834853659872
    public_access_prevention    = "inherited"
    requester_pays              = false
    self_link                   = "https://www.googleapis.com/storage/v1/b/az-537298-bucket"
    storage_class               = "STANDARD"
    terraform_labels            = {
        "goog-terraform-provisioned" = "true"
    }
    uniform_bucket_level_access = false
    url                         = "gs://az-537298-bucket"

    soft_delete_policy {
        effective_time             = "2024-10-20T17:16:39.149Z"
        retention_duration_seconds = 604800
    }
}

# google_storage_bucket_object.files[".env/env_local"]:
resource "google_storage_bucket_object" "files" {
    bucket              = "az-537298-bucket"
    cache_control       = [90mnull[0m[0m
    content_disposition = [90mnull[0m[0m
    content_encoding    = [90mnull[0m[0m
    content_language    = [90mnull[0m[0m
    content_type        = "text/plain; charset=utf-8"
    crc32c              = "tLp/bQ=="
    detect_md5hash      = "7ravymD2P4uYk/dreUeYRw=="
    event_based_hold    = false
    generation          = 1729444601111020
    id                  = "az-537298-bucket-.env/env_local"
    kms_key_name        = [90mnull[0m[0m
    md5hash             = "7ravymD2P4uYk/dreUeYRw=="
    media_link          = "https://storage.googleapis.com/download/storage/v1/b/az-537298-bucket/o/.env%2Fenv_local?generation=1729444601111020&alt=media"
    name                = ".env/env_local"
    output_name         = ".env/env_local"
    self_link           = "https://www.googleapis.com/storage/v1/b/az-537298-bucket/o/.env%2Fenv_local"
    source              = "../.env/env_local"
    storage_class       = "STANDARD"
    temporary_hold      = false
}

# google_storage_bucket_object.files[".env/mysqlserver.env"]:
resource "google_storage_bucket_object" "files" {
    bucket              = "az-537298-bucket"
    cache_control       = [90mnull[0m[0m
    content_disposition = [90mnull[0m[0m
    content_encoding    = [90mnull[0m[0m
    content_language    = [90mnull[0m[0m
    content_type        = "text/plain; charset=utf-8"
    crc32c              = "31cdHw=="
    detect_md5hash      = "BfHeyqFhEeIh58PJv6dM6A=="
    event_based_hold    = false
    generation          = 1729444601116753
    id                  = "az-537298-bucket-.env/mysqlserver.env"
    kms_key_name        = [90mnull[0m[0m
    md5hash             = "BfHeyqFhEeIh58PJv6dM6A=="
    media_link          = "https://storage.googleapis.com/download/storage/v1/b/az-537298-bucket/o/.env%2Fmysqlserver.env?generation=1729444601116753&alt=media"
    name                = ".env/mysqlserver.env"
    output_name         = ".env/mysqlserver.env"
    self_link           = "https://www.googleapis.com/storage/v1/b/az-537298-bucket/o/.env%2Fmysqlserver.env"
    source              = "../.env/mysqlserver.env"
    storage_class       = "STANDARD"
    temporary_hold      = false
}

# google_storage_bucket_object.files[".env/petclinic.env"]:
resource "google_storage_bucket_object" "files" {
    bucket              = "az-537298-bucket"
    cache_control       = [90mnull[0m[0m
    content_disposition = [90mnull[0m[0m
    content_encoding    = [90mnull[0m[0m
    content_language    = [90mnull[0m[0m
    content_type        = "text/plain; charset=utf-8"
    crc32c              = "+SQPdg=="
    detect_md5hash      = "WhJI6LYKbRpYnF140aj11Q=="
    event_based_hold    = false
    generation          = 1729444601110983
    id                  = "az-537298-bucket-.env/petclinic.env"
    kms_key_name        = [90mnull[0m[0m
    md5hash             = "WhJI6LYKbRpYnF140aj11Q=="
    media_link          = "https://storage.googleapis.com/download/storage/v1/b/az-537298-bucket/o/.env%2Fpetclinic.env?generation=1729444601110983&alt=media"
    name                = ".env/petclinic.env"
    output_name         = ".env/petclinic.env"
    self_link           = "https://www.googleapis.com/storage/v1/b/az-537298-bucket/o/.env%2Fpetclinic.env"
    source              = "../.env/petclinic.env"
    storage_class       = "STANDARD"
    temporary_hold      = false
}

# google_storage_bucket_object.files["app/__cacert_entrypoint.sh"]:
resource "google_storage_bucket_object" "files" {
    bucket              = "az-537298-bucket"
    cache_control       = [90mnull[0m[0m
    content_disposition = [90mnull[0m[0m
    content_encoding    = [90mnull[0m[0m
    content_language    = [90mnull[0m[0m
    content_type        = "text/plain; charset=utf-8"
    crc32c              = "HuQhdQ=="
    detect_md5hash      = "8M3u7VxX7I1oEq0ZQH150w=="
    event_based_hold    = false
    generation          = 1729444601109391
    id                  = "az-537298-bucket-app/__cacert_entrypoint.sh"
    kms_key_name        = [90mnull[0m[0m
    md5hash             = "8M3u7VxX7I1oEq0ZQH150w=="
    media_link          = "https://storage.googleapis.com/download/storage/v1/b/az-537298-bucket/o/app%2F__cacert_entrypoint.sh?generation=1729444601109391&alt=media"
    name                = "app/__cacert_entrypoint.sh"
    output_name         = "app/__cacert_entrypoint.sh"
    self_link           = "https://www.googleapis.com/storage/v1/b/az-537298-bucket/o/app%2F__cacert_entrypoint.sh"
    source              = "../app/__cacert_entrypoint.sh"
    storage_class       = "STANDARD"
    temporary_hold      = false
}

# google_storage_bucket_object.files["app/petclinic.service"]:
resource "google_storage_bucket_object" "files" {
    bucket              = "az-537298-bucket"
    cache_control       = [90mnull[0m[0m
    content_disposition = [90mnull[0m[0m
    content_encoding    = [90mnull[0m[0m
    content_language    = [90mnull[0m[0m
    content_type        = "text/plain; charset=utf-8"
    crc32c              = "v8Sa+A=="
    detect_md5hash      = "gZmS4RYcZtsJzM4cVhLXUg=="
    event_based_hold    = false
    generation          = 1729444600714371
    id                  = "az-537298-bucket-app/petclinic.service"
    kms_key_name        = [90mnull[0m[0m
    md5hash             = "gZmS4RYcZtsJzM4cVhLXUg=="
    media_link          = "https://storage.googleapis.com/download/storage/v1/b/az-537298-bucket/o/app%2Fpetclinic.service?generation=1729444600714371&alt=media"
    name                = "app/petclinic.service"
    output_name         = "app/petclinic.service"
    self_link           = "https://www.googleapis.com/storage/v1/b/az-537298-bucket/o/app%2Fpetclinic.service"
    source              = "../app/petclinic.service"
    storage_class       = "STANDARD"
    temporary_hold      = false
}

# google_storage_bucket_object.files["app/spring-petclinic.jar"]:
resource "google_storage_bucket_object" "files" {
    bucket              = "az-537298-bucket"
    cache_control       = [90mnull[0m[0m
    content_disposition = [90mnull[0m[0m
    content_encoding    = [90mnull[0m[0m
    content_language    = [90mnull[0m[0m
    content_type        = "application/zip"
    crc32c              = "yeTJpg=="
    detect_md5hash      = "Ni+90cgySEsynNwDsH1lOg=="
    event_based_hold    = false
    generation          = 1729444611611912
    id                  = "az-537298-bucket-app/spring-petclinic.jar"
    kms_key_name        = [90mnull[0m[0m
    md5hash             = "Ni+90cgySEsynNwDsH1lOg=="
    media_link          = "https://storage.googleapis.com/download/storage/v1/b/az-537298-bucket/o/app%2Fspring-petclinic.jar?generation=1729444611611912&alt=media"
    name                = "app/spring-petclinic.jar"
    output_name         = "app/spring-petclinic.jar"
    self_link           = "https://www.googleapis.com/storage/v1/b/az-537298-bucket/o/app%2Fspring-petclinic.jar"
    source              = "../app/spring-petclinic.jar"
    storage_class       = "STANDARD"
    temporary_hold      = false
}

# google_storage_bucket_object.files["app/start_app.sh"]:
resource "google_storage_bucket_object" "files" {
    bucket              = "az-537298-bucket"
    cache_control       = [90mnull[0m[0m
    content_disposition = [90mnull[0m[0m
    content_encoding    = [90mnull[0m[0m
    content_language    = [90mnull[0m[0m
    content_type        = "text/plain; charset=utf-8"
    crc32c              = "qYPHeg=="
    detect_md5hash      = "YZRtTGdOcIJU6Cr9iLDU5A=="
    event_based_hold    = false
    generation          = 1729444601024319
    id                  = "az-537298-bucket-app/start_app.sh"
    kms_key_name        = [90mnull[0m[0m
    md5hash             = "YZRtTGdOcIJU6Cr9iLDU5A=="
    media_link          = "https://storage.googleapis.com/download/storage/v1/b/az-537298-bucket/o/app%2Fstart_app.sh?generation=1729444601024319&alt=media"
    name                = "app/start_app.sh"
    output_name         = "app/start_app.sh"
    self_link           = "https://www.googleapis.com/storage/v1/b/az-537298-bucket/o/app%2Fstart_app.sh"
    source              = "../app/start_app.sh"
    storage_class       = "STANDARD"
    temporary_hold      = false
}
